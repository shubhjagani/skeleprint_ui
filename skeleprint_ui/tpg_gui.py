#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.8.9
# In conjunction with Tcl version 8.6
#    Feb 25, 2017 11:35:36 PM
import sys, os

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

from PIL import Image, ImageTk

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import tpg_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    tpg_gui_support.set_Tk_var()
    top = Tool_Path_Generator (root)
    tpg_gui_support.init(root, top)
    root.mainloop()

w = None
def create_Tool_Path_Generator(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    tpg_gui_support.set_Tk_var()
    top = Tool_Path_Generator (w)
    tpg_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Tool_Path_Generator():
    global w
    w.destroy()
    w = None

class Tool_Path_Generator:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#e6e6e6'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#e6e6e6' # X11 color: 'gray85'
        _ana1color = '#e6e6e6' # X11 color: 'gray85' 
        _ana2color = '#e6e6e6' # X11 color: 'gray85' 
        font9 = "-family Courier -size 13 -weight normal -slant roman "  \
            "-underline 0 -overstrike 0"
        font11 = "-size 15 -weight normal -slant roman "  \
            "-underline 0 -overstrike 0"

        top.geometry("1200x900+404+92")
        top.title("SkelePrint Tool Path Generator")
        top.configure(background="#e6e6e6")
        top.configure(highlightbackground="#e6e6e6")
        top.configure(highlightcolor="black")
        
        tpg_gui_support.axial_length.set(200)
        tpg_gui_support.printbed_diameter.set(10)
        tpg_gui_support.final_diameter.set(20)
        tpg_gui_support.filament_width_og.set(1)
        tpg_gui_support.helix_angle.set(0)
        tpg_gui_support.smear_factor.set(100)
        tpg_gui_support.feedrate.set(1000)



        self.Label7 = Label(top)
        self.Label7.place(relx=0.00, rely=0.01, height=35, width=323)
        self.Label7.configure(background="#e6e6e6")
        self.Label7.configure(font=font11)
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''SkelePrint Tool Path Generator 1.0''')

        self.Button1 = Button(top)
        self.Button1.place(relx=0.3, rely=0.82, relheight=0.1, relwidth=0.4)
        self.Button1.configure(activebackground="#e6e6e6")
        self.Button1.configure(activeforeground="#e6e6e6")
        self.Button1.configure(background="#e6e6e6")
        self.Button1.configure(command=lambda: tpg_gui_support.tpg(tpg_gui_support.axial_length.get(), tpg_gui_support.filament_width_og.get(), tpg_gui_support.printbed_diameter.get(), tpg_gui_support.final_diameter.get(), tpg_gui_support.helix_angle.get(), tpg_gui_support.smear_factor.get(), tpg_gui_support.feedrate.get()))
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#e6e6e6")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(relief=RAISED)
        self.Button1.configure(text='''Generate G Code''')

        self.Label8 = Label(top)
        self.Label8.place(relx=0.3, rely=0.9, relheight=0.1, relwidth=0.4)
        self.Label8.configure(background="#e6e6e6")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''G Code file will be saved on your Desktop under:
"gcode/timestamp_skeleprint_gcode.gcode"''')

        self.Labelframe1 = LabelFrame(top)
        self.Labelframe1.place(relx=0.03, rely=0.06, relheight=0.78
                , relwidth=0.46)
        self.Labelframe1.configure(relief=GROOVE)
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Dimensions''')
        self.Labelframe1.configure(background="#e6e6e6")
        self.Labelframe1.configure(highlightbackground="#e6e6e6")
        self.Labelframe1.configure(highlightcolor="black")
        self.Labelframe1.configure(width=370)
        
        

        self.axial_length = Entry(self.Labelframe1)
        self.axial_length.place(relx=0.41, rely=0.06, relheight=0.04
                , relwidth=0.34)
        self.axial_length.configure(background="white")
        self.axial_length.configure(font="TkFixedFont")
        self.axial_length.configure(foreground="#000000")
        self.axial_length.configure(highlightbackground="#e6e6e6")
        self.axial_length.configure(highlightcolor="black")
        self.axial_length.configure(insertbackground="black")
        self.axial_length.configure(selectbackground="#c4c4c4")
        self.axial_length.configure(selectforeground="black")
        self.axial_length.configure(textvariable=tpg_gui_support.axial_length)

        self.Label1 = Label(self.Labelframe1)
        self.Label1.place(relx=0.03, rely=0.06, relheight=0.04, relwidth=0.34)
        self.Label1.configure(activebackground="#e6e6e6")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#e6e6e6")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#e6e6e6")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Axial Length''')
        self.Label1.configure(width=88)

        self.Label2 = Label(self.Labelframe1)
        self.Label2.place(relx=0.75, rely=0.06, height=21)
        self.Label2.configure(activebackground="#e6e6e6")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#e6e6e6")
        self.Label2.configure(disabledforeground="#e6e6e6")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#e6e6e6")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''mm''')

        self.Label3 = Label(self.Labelframe1)
        self.Label3.place(relx=0.03, rely=0.11, relheight=0.04, relwidth=0.34)
        self.Label3.configure(activebackground="#e6e6e6")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#e6e6e6")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#e6e6e6")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Printbed Diameter''')

        self.Entry2 = Entry(self.Labelframe1)
        self.Entry2.place(relx=0.41, rely=0.11, relheight=0.04, relwidth=0.34)
        self.Entry2.configure(background="white")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#e6e6e6")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(selectforeground="black")
        self.Entry2.configure(textvariable=tpg_gui_support.printbed_diameter)

        self.Label4 = Label(self.Labelframe1)
        self.Label4.place(relx=0.75, rely=0.11, height=21, width=28)
        self.Label4.configure(activebackground="#e6e6e6")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#e6e6e6")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#e6e6e6")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''mm''')

        self.Label5 = Label(self.Labelframe1)
        self.Label5.place(relx=0.03, rely=0.17, relheight=0.04, relwidth=0.34)
        self.Label5.configure(activebackground="#e6e6e6")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#e6e6e6")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#e6e6e6")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Final Print Diameter''')


        self.final_diameter = Entry(self.Labelframe1)
        self.final_diameter.place(relx=0.41, rely=0.17, relheight=0.04
                , relwidth=0.34)
        self.final_diameter.configure(background="white")
        self.final_diameter.configure(font="TkFixedFont")
        self.final_diameter.configure(foreground="#000000")
        self.final_diameter.configure(highlightbackground="#e6e6e6")
        self.final_diameter.configure(highlightcolor="black")
        self.final_diameter.configure(insertbackground="black")
        self.final_diameter.configure(selectbackground="#c4c4c4")
        self.final_diameter.configure(selectforeground="black")
        self.final_diameter.configure(textvariable=tpg_gui_support.final_diameter)

        self.Label6 = Label(self.Labelframe1)
        self.Label6.place(relx=0.75, rely=0.17, height=21, width=28)
        self.Label6.configure(activebackground="#e6e6e6")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#e6e6e6")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#e6e6e6")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''mm''')

        self.Entry4 = Entry(self.Labelframe1)
        self.Entry4.place(relx=0.41, rely=0.22, relheight=0.04, relwidth=0.34)
        self.Entry4.configure(background="white")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(highlightbackground="#e6e6e6")
        self.Entry4.configure(highlightcolor="black")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(selectbackground="#c4c4c4")
        self.Entry4.configure(selectforeground="black")
        self.Entry4.configure(textvariable=tpg_gui_support.filament_width_og)

        self.Label7 = Label(self.Labelframe1)
        self.Label7.place(relx=0.75, rely=0.22, height=21, width=28)
        self.Label7.configure(activebackground="#e6e6e6")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#e6e6e6")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#e6e6e6")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''mm''')

        self.Label8 = Label(self.Labelframe1)
        self.Label8.place(relx=0.03	, rely=0.22, relheight=0.04, relwidth=0.34)
        self.Label8.configure(activebackground="#e6e6e6")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#e6e6e6")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#e6e6e6")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''Filament Width''')

        self.tip = Label(self.Labelframe1, width=317, height=350)  

        __location__ = os.path.realpath(
        os.path.join(os.getcwd(), os.path.dirname(__file__)))

        img = Image.open(os.path.join(__location__, 'dimensions.jpg'))
        one = ImageTk.PhotoImage(img)        

        self.tip = Label(self.Labelframe1, image=one)
        self.tip.image = one
        self.tip.configure(background="#e6e6e6")
        self.tip.place(relx=0.1,rely=0.3)

        

        self.Labelframe2 = LabelFrame(top)
        self.Labelframe2.place(relx=0.5, rely=0.06, relheight=0.78
                , relwidth=0.46)
        self.Labelframe2.configure(relief=GROOVE)
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Print Properties''')
        self.Labelframe2.configure(background="#e6e6e6")
        self.Labelframe2.configure(highlightbackground="#e6e6e6")
        self.Labelframe2.configure(highlightcolor="black")
        self.Labelframe2.configure(width=370)

        

        self.Label9 = Label(self.Labelframe2)
        self.Label9.place(relx=0.01, rely=0.06, relheight=0.04, relwidth=0.3)
        self.Label9.configure(activebackground="#e6e6e6")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(background="#e6e6e6")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#e6e6e6")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''Helix Angle''')

        self.Entry5 = Entry(self.Labelframe2)
        self.Entry5.place(relx=0.32, rely=0.06, relheight=0.04, relwidth=0.34)
        self.Entry5.configure(background="white")
        self.Entry5.configure(font="TkFixedFont")
        self.Entry5.configure(foreground="#000000")
        self.Entry5.configure(highlightbackground="#e6e6e6")
        self.Entry5.configure(highlightcolor="black")
        self.Entry5.configure(insertbackground="black")
        self.Entry5.configure(selectbackground="#c4c4c4")
        self.Entry5.configure(selectforeground="black")
        self.Entry5.configure(textvariable=tpg_gui_support.helix_angle)

        self.Label10 = Label(self.Labelframe2)
        self.Label10.place(relx=0.68, rely=0.06, height=21, width=113)
        self.Label10.configure(activebackground="#e6e6e6")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(background="#e6e6e6")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#e6e6e6")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''degrees [0 - 90]''')

        

        self.Scale1 = Scale(self.Labelframe2)
        self.Scale1.place(relx=0.32, rely=0.17, relwidth=0.42, relheight=0.0
                , height=39)
        self.Scale1.configure(activebackground="#e6e6e6")
        self.Scale1.configure(background="#e6e6e6")
        self.Scale1.configure(font="TkTextFont")
        self.Scale1.configure(foreground="#000000")
        self.Scale1.configure(from_="5.0")
        self.Scale1.configure(highlightbackground="#d9d9d9")
        self.Scale1.configure(highlightcolor="black")
        self.Scale1.configure(length="150")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(resolution="5.0")
        self.Scale1.configure(troughcolor="#d9d9d9")
        self.Scale1.configure(variable=tpg_gui_support.smear_factor)

        self.Label8 = Label(self.Labelframe2)
        self.Label8.place(relx=0.01, rely=0.13, relheight=0.04, relwidth=0.3)
        self.Label8.configure(background="#e6e6e6")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''Feedrate''')

        self.Scale2 = Scale(self.Labelframe2)
        self.Scale2.place(relx=0.32, rely=0.1, relwidth=0.42, relheight=0.0
                , height=39)
        self.Scale2.configure(activebackground="#e6e6e6")
        self.Scale2.configure(background="#e6e6e6")
        self.Scale2.configure(font="TkTextFont")
        self.Scale2.configure(foreground="#000000")
        self.Scale2.configure(from_="250.0")
        self.Scale2.configure(highlightbackground="#d9d9d9")
        self.Scale2.configure(highlightcolor="black")
        self.Scale2.configure(length="152")
        self.Scale2.configure(orient="horizontal")
        self.Scale2.configure(resolution="50.0")
        self.Scale2.configure(to="2500.0")
        self.Scale2.configure(troughcolor="#d9d9d9")
        self.Scale2.configure(variable=tpg_gui_support.feedrate)

        self.Label12 = Label(self.Labelframe2)
        self.Label12.place(relx=0.76, rely=0.13, height=21, width=58)
        self.Label12.configure(activebackground="#e6e6e6")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#e6e6e6")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''mm/min''')

        self.Label11 = Label(self.Labelframe2)
        self.Label11.place(relx=0.01, rely=0.21,  relheight=0.04, relwidth=0.3)
        self.Label11.configure(activebackground="#e6e6e6")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#e6e6e6")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''Layer Height %''')

        self.Label13 = Label(self.Labelframe2)
        self.Label13.place(relx=0.08, rely=0.26,  relheight=0.06, relwidth=0.8)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#e6e6e6")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''caution: layer height % is experimental
default = 100% (ie. layer height = filament width)''')
        self.Label13.configure(width=305)

        self.tip2 = Label(self.Labelframe2, width=300, height=91)  

        img2 = Image.open(os.path.join(__location__, 'theta.jpg'))
        two = ImageTk.PhotoImage(img2)        

        self.tip2 = Label(self.Labelframe2, image=two)
        self.tip2.image = two
        self.tip2.configure(background="#e6e6e6")
        self.tip2.place(relx=0.1,rely=0.35) 


        self.Message1 = Message(self.Labelframe2)
        self.Message1.place(relx=0.01, rely=0.5, relheight=0.5, relwidth=0.8)
        self.Message1.configure(anchor=N)
        self.Message1.configure(background="#e6e6e6")
        self.Message1.configure(foreground="#000000")
        self.Message1.configure(highlightbackground="#e6e6e6")
        self.Message1.configure(highlightcolor="black")
        self.Message1.configure(text='''

Helix Angle Conditions: 
If the angle is > 90, it will be set to 90 degrees

If angle is < 0, it will be set to 0 degrees

If angle = 0, the layer will consist of a single helix printed as close together as possible

If angle = 90, the layer will consist of many straight lines''')
        self.Message1.configure(width=334)

        
        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

   
if __name__ == '__main__':
    vp_start_gui()



